import{ai as c,x as p,aE as a,A as s,a2 as r,L as o,aa as t,v as n}from"./chunks/framework.DNV5qdj1.js";const Z=JSON.parse('{"title":"调试代码","description":"","frontmatter":{"authors":["windingwind","ShareStuff","northword"]},"headers":[],"relativePath":"plugin-dev-guide/development/debug.md","filePath":"wiki/plugin-dev-guide/development/debug.md"}'),u={name:"plugin-dev-guide/development/debug.md"},g={id:"通过火狐浏览器远程调试",tabindex:"-1"};function b(h,e,m,k,v,f){const l=t("Badge"),i=t("NolebaseGitContributors"),d=t("NolebaseGitChangelog");return n(),p("div",null,[e[3]||(e[3]=a('<h1 id="调试代码" tabindex="-1">调试代码 <a class="header-anchor" href="#调试代码" aria-label="Permalink to &quot;调试代码&quot;">​</a></h1><h2 id="通过-run-javascript-调试" tabindex="-1">通过 Run JavaScript 调试 <a class="header-anchor" href="#通过-run-javascript-调试" aria-label="Permalink to &quot;通过 Run JavaScript 调试&quot;">​</a></h2><p>从 「菜单栏」-&gt;「工具」-&gt;「开发者」-&gt;「Run JavaScript」 打开界面。</p><p>在左侧键入代码，点击运行即可在右侧看到输出。</p><p>如果代码中包含异步语法（async），需要将结果 return 才能在右侧看见。</p><h2 id="通过-zotero-debug-输出日志" tabindex="-1">通过 <code>Zotero.debug</code> 输出日志 <a class="header-anchor" href="#通过-zotero-debug-输出日志" aria-label="Permalink to &quot;通过 `Zotero.debug` 输出日志&quot;">​</a></h2><ul><li>使用 <code>Zotero.debug</code> 输出到 「菜单栏」-&gt;「帮助」-&gt;「输出日志排错」-&gt;「查看输出文件」；</li><li>使用 <code>Zotero.log</code> 输出到 「菜单栏」-&gt;「工具」-&gt;「开发者」-&gt;「Error Console」。</li></ul><div class="tip custom-block"><p class="custom-block-title">不推荐使用 <code>console</code> 作为调试/日志输出</p><ul><li>Zotero 插件环境没有默认将 <code>console</code> 作为一个全局对象</li><li><code>console.log</code> 是性能昂贵的</li></ul><p>如果可能，请使用辅助函数，仅在开发环境打印日志，可参考 <code>ztoolkit.log</code>。</p></div><h2 id="通过开发者工具" tabindex="-1">通过开发者工具 <a class="header-anchor" href="#通过开发者工具" aria-label="Permalink to &quot;通过开发者工具&quot;">​</a></h2><p>由于 Zotero 基于 Firefox，因此可以使用 <a href="https://developer.mozilla.org/zh-CN/docs/Learn/Common_questions/What_are_browser_developer_tools" target="_blank" rel="noreferrer">Firefox 开发者工具</a> 与 DOM 交互、设置代码断点、跟踪网络请求等。</p><p>Zotero 7 beta 版本内建 Firefox 115 开发者工具。要在启动 Zotero 时打开开发者工具，请在命令行上传递 <code>-jsdebugger</code> 标志：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/Applications/Zotero\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Beta.app/Contents/MacOS/zotero</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ZoteroDebugText</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -jsdebugger</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">依赖 beta 版本 Zotero</p><p>需要 <a href="https://www.zotero.org/support/beta_builds" target="_blank" rel="noreferrer">Zotero beta builds</a> 。Windows 开发者可下载 zip 版本，解压缩后即可使用，不会将正式版覆盖。</p></div><div class="info custom-block"><p class="custom-block-title">即将实现：在菜单栏中直接打开开发者工具</p><p>Zotero 团队正在添加「浏览器工具箱」菜单，以便直接从菜单呼出开发者工具，而无需在启动时传入 <code>--jsdebugger</code> 标志，见 <a href="https://github.com/zotero/zotero/pull/3387" target="_blank" rel="noreferrer">PR #3387</a>。</p></div><div class="info custom-block"><p class="custom-block-title">模板用户无需手动配置</p><p>模板的启动脚本中已经进行了相关配置，<code>npm start</code> 后即可打开开发者工具。</p></div>',15)),s("h2",g,[e[0]||(e[0]=r("通过火狐浏览器远程调试 ")),o(l,{text:"已弃用"}),e[1]||(e[1]=r()),e[2]||(e[2]=s("a",{class:"header-anchor",href:"#通过火狐浏览器远程调试","aria-label":`Permalink to "通过火狐浏览器远程调试 <Badge text='已弃用' />"`},"​",-1))]),e[4]||(e[4]=a('<details class="details custom-block"><summary>已过时：通过火狐浏览器远程调试连接到 Zotero</summary><div class="warning custom-block"><p class="custom-block-title">该方法已过时</p><p>该方法已过时，Zotero 测试版现已内建 <code>Browser Toolbox</code>，请参阅 <a href="#通过开发者工具">通过开发者工具</a>。</p></div><p>截止至最后编辑日期，Zotero 底层基于 Firefox 115 ESR。</p><ol><li><p>打开 Zotero Beta，打开 「菜单栏」-&gt;「编辑」-&gt;「设置」-&gt;「高级」-&gt;「设置编辑器」，搜索 <code>debug</code> 并将 <code>devtools.debugger.remote-enable</code> 和 <code>devtools.debugger.remote-websocket</code> 设置为 <code>true</code>。</p></li><li><p>使用 <code>--debugger</code> 参数启动 Zotero。 也可以将启动参数写入快捷方式。</p></li><li><p>在 FireFox 115 ESR 中，找到「设置」-&gt;「更多工具」-&gt;「远程调试」（或者浏览器中输入：<code>about:debugging#/setup</code>），找到网络位置，输入 <code>localhost:6100</code>，点击确定添加即可。</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>端口与第一步打开的高级编辑器中 <code>devtools.debugger.remote-port</code> 一致。</p><p>注意，自 Zotero 7.0.0-beta.104 开始，Zotero 不再固定使用 6100 作为端口号，而是使用随机端口号。</p></div></li><li><p>选择 <code>localhost:6100</code>，然后点击进程中的多线程工具箱进行检查，可进入控制台、无障碍环境等进行调试</p></li></ol></details>',1)),o(i),o(d)])}const C=c(u,[["render",b]]);export{Z as __pageData,C as default};
