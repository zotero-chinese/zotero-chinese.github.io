import{ai as n,x as l,aE as r,L as o,aa as t,v as s}from"./chunks/framework.DNV5qdj1.js";const v=JSON.parse('{"title":"侧载插件","description":"","frontmatter":{},"headers":[],"relativePath":"plugin-dev-guide/development/sideloading.md","filePath":"wiki/plugin-dev-guide/development/sideloading.md"}'),d={name:"plugin-dev-guide/development/sideloading.md"};function p(c,e,m,u,g,h){const a=t("NolebaseGitContributors"),i=t("NolebaseGitChangelog");return s(),l("div",null,[e[0]||(e[0]=r('<h1 id="侧载插件" tabindex="-1">侧载插件 <a class="header-anchor" href="#侧载插件" aria-label="Permalink to &quot;侧载插件&quot;">​</a></h1><p>Zotero 基于 Firefox，与其相同的，Zotero 侧载插件也有两种方式，分别是通过代理文件在启动时加载插件，和通过远程调试以临时插件的形式载入插件。</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>使用社区模板的开发者，无需配置这些环境，只需要按照模板要求配置 Zotero 可执行文件路径和配置文件地址即可。模板中的启动脚本将为你自动侧载插件。</p></div><h2 id="通过代理文件载入插件" tabindex="-1">通过代理文件载入插件 <a class="header-anchor" href="#通过代理文件载入插件" aria-label="Permalink to &quot;通过代理文件载入插件&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">Todo</p><p>此节说明如何通过代理文件将插件侧载入 Zotero，待完善，请参阅：<a href="https://www.zotero.org/support/dev/client_coding/plugin_development#setting_up_a_plugin_development_environment" target="_blank" rel="noreferrer">Setting Up a Plugin Development Environment</a>。</p></div><h2 id="通过安装临时插件载入" tabindex="-1">通过安装临时插件载入 <a class="header-anchor" href="#通过安装临时插件载入" aria-label="Permalink to &quot;通过安装临时插件载入&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">Todo</p><p>Zotero 官方尚未提供此种方式的文档，但此种方式是 Firefox 较为推荐的方式，社区维护的框架等也正在逐步迁移至此种方式，在迁移完成之前，可以参考 <a href="https://github.com/mozilla/web-ext/" target="_blank" rel="noreferrer">web-ext</a> 包来实现。</p></div>',7)),o(a),o(i)])}const _=n(d,[["render",p]]);export{v as __pageData,_ as default};
