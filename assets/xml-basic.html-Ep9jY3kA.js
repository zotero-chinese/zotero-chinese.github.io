import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o,c as l,a,b as n,d as c,e as s}from"./app-7Pd4QpyL.js";const i={},u=s(`<h1 id="xml-基础" tabindex="-1"><a class="header-anchor" href="#xml-基础" aria-hidden="true">#</a> XML 基础</h1><blockquote><p>[!warning] WORK IN PROGRESS<br> 此页面正在施工中。</p></blockquote><p><code>CSL</code> 基于 <code>XML(eXtensible Markup Language)</code>。<code>XML</code> 是一种标记语言，这里只介绍基本的术语，以理解 <code>CSL</code> 文件格式。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot; ?&gt;</span>  # 文档声明

<span class="token comment">&lt;!-- 这是一个注释 --&gt;</span>  # 注释

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hello</span><span class="token punctuation">&gt;</span></span> # 根元素，文档的第一个元素，有且仅有一个
    # 子元素
    # 属性
    # 元素文本
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hello</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的代码时一个简单的 <code>XML</code> 结构。为了方便说明使用了 <code>#</code>符号作为注释符号，<code>#</code>并不是真正的注释符号，<code>XML</code>的注释格式为文档中的第二行所示的形式。</p><p>第一行为声明，或者称为序言，总是在文档的最前面。包括了<code>XML</code> 的版本、编码信息以及是否依赖外部文档等。这一行代码会告诉解析器或浏览器这个文件应该按照 XML 规则进行解析。</p><p>第二行为 <code>XML</code> 文档的注释。格式为 <code>&lt;!-- 注释--&gt;</code>。</p><p>剩下的代码为 <code>XML</code> 文件的根元素，根元素也是元素，根元素是文档的第一个元素，有且仅有一个。</p><h2 id="元素" tabindex="-1"><a class="header-anchor" href="#元素" aria-hidden="true">#</a> 元素</h2><p>元素由开始标签，元素内容和结束标签构成。其中可以包含属性、元素和注释。根元素包含了其他所有元素。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>title</code> 为元素名。</p><p>元素有 4 种形式。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>1. 空元素
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RAM</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RAM</span><span class="token punctuation">&gt;</span></span>  或者 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RAM</span><span class="token punctuation">/&gt;</span></span>

2. 带有属性的空元素
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RAM</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>  或者 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RAM</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RAM</span><span class="token punctuation">/&gt;</span></span>

3. 带有内容的元素
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Price</span><span class="token punctuation">&gt;</span></span>21000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Price</span><span class="token punctuation">&gt;</span></span>
    
4. 带有内容和属性的元素
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Price</span> <span class="token attr-name">MoneyKind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>RMB<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>21000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Price</span><span class="token punctuation">&gt;</span></span>  # MoneyKind 为属性  21000为元素值
或者是
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NotebookComputer</span><span class="token punctuation">&gt;</span></span>
Style =&quot; LX2000&quot;
CPU =&quot; PIII600&quot;
RAM =&quot;128M &quot;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NotebookComputer</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所有的元素都包含在根元素中，为根元素的子元素，子元素还还可以包含子元素。</p><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><p>属性是对元素及其内容的描述，用 <code>=</code> 隔开。属性必须包含在一对单引号或者双引号之间。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Movie</span> <span class="token attr-name">ID</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>09001<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>   # 其中的 id 就是属性  后面的值就是属性值
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>非诚勿扰<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>  # 子元素
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>price</span><span class="token punctuation">&gt;</span></span>70<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>price</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Movie</span><span class="token punctuation">&gt;</span></span>

# 空元素的属性
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>80<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>

# 属性的另外一种形式
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NotebookComputer</span><span class="token punctuation">&gt;</span></span>
Style =&quot; LX2000&quot;
CPU =&quot; PIII600&quot;
RAM =&quot;128M &quot;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NotebookComputer</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每个元素中，一个属性最多出现一次，一个属性只能有一个值。</p>`,19),d=a("code",null,"XML",-1),r={href:"https://zh.wikipedia.org/wiki/CSS",target:"_blank",rel:"noopener noreferrer"},k=s(`<h2 id="预定义实体表" tabindex="-1"><a class="header-anchor" href="#预定义实体表" aria-hidden="true">#</a> 预定义实体表</h2><p><code>xml</code> 文件中某些符号无法正常表达，比如 <code>&lt;</code> 或者 <code>&gt;</code>，不处理的话会导致混乱。</p><table><thead><tr><th>所定义的实体</th><th>所代表的字符</th></tr></thead><tbody><tr><td><code>&amp;lt;</code></td><td>&lt;</td></tr><tr><td><code>&amp;gt;</code></td><td>&gt;\`\`</td></tr><tr><td><code>&amp;quot;</code></td><td>&quot;</td></tr><tr><td><code>&amp;apos;</code></td><td>&#39;</td></tr><tr><td><code>&amp;amp;</code></td><td>&amp;</td></tr></tbody></table><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Para1</span><span class="token punctuation">&gt;</span></span>John asked <span class="token entity named-entity" title="&quot;">&amp;quot;</span>What<span class="token entity named-entity" title="&#39;">&amp;apos;</span>s your name?<span class="token entity named-entity" title="&quot;">&amp;quot;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Para1</span><span class="token punctuation">&gt;</span></span>

中间的结果:
John asked &quot;What&#39;s your name? &quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function v(m,g){const t=p("ExternalLinkIcon");return o(),l("div",null,[u,a("p",null,[n("如果属性有多个值，这需要采取 "),d,n(" 协议以外的方式来表示，如采用逗号或分号间隔，对于 "),a("a",r,[n("CSS"),c(t)]),n(" 类或标识符的名字可用空格来分隔。")]),k])}const q=e(i,[["render",v],["__file","xml-basic.html.vue"]]);export{q as default};
