import{ai as a,x as r,aE as n,L as t,aa as i,v as s}from"./chunks/framework.DNV5qdj1.js";const f=JSON.parse('{"title":"使用社区模板","description":"","frontmatter":{},"headers":[],"relativePath":"plugin-dev-guide/use-template/index.md","filePath":"wiki/plugin-dev-guide/use-template/index.md"}'),d={name:"plugin-dev-guide/use-template/index.md"};function p(c,e,u,m,g,h){const o=i("NolebaseGitContributors"),l=i("NolebaseGitChangelog");return s(),r("div",null,[e[0]||(e[0]=n('<h1 id="使用社区模板" tabindex="-1">使用社区模板 <a class="header-anchor" href="#使用社区模板" aria-label="Permalink to &quot;使用社区模板&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">Todo</p><p>社区模板地址：<a href="https://github.com/windingwind/zotero-plugin-template" target="_blank" rel="noreferrer">https://github.com/windingwind/zotero-plugin-template</a></p><p>考虑到 Zotero 7 后续仍会有一次比较大的底层架构变更，因此该部分内容暂时挂起，开发者可参考仓库的自述文档来配置模板。</p></div><h2 id="为什么使用该模板" tabindex="-1">为什么使用该模板 <a class="header-anchor" href="#为什么使用该模板" aria-label="Permalink to &quot;为什么使用该模板&quot;">​</a></h2><ul><li>事件驱动、函数式编程的可扩展框架；</li><li>简单易用，开箱即用；</li><li>⭐[新特性!]自动热重载！当修改源码时，都会自动编译并重新加载插件；</li><li><code>src/modules/examples.ts</code> 中有丰富的示例，涵盖了插件中常用的大部分 API 使用的插件工具包 <a href="https://github.com/windingwind/zotero-plugin-toolkit" target="_blank" rel="noreferrer">Zotero-plugin-toolkit</a>；</li><li>TypeScript 支持: <ul><li>为使用 JavaScript 编写的 Zotero 源码提供全面的类型定义支持 （使用类型定义包 <a href="https://github.com/windingwind/zotero-types" target="_blank" rel="noreferrer">Zotero-types</a>）</li><li>全局变量和环境设置；</li></ul></li><li>插件开发/构建/发布工作流: <ul><li>自动生成/更新插件 id 和版本、更新配置和设置环境变量 (<code>development</code>/<code>production</code>)；</li><li>自动在 Zotero 中构建和重新加载代码；</li><li>自动发布到 GitHub (使用 <a href="https://github.com/release-it/release-it" target="_blank" rel="noreferrer">release-it</a>);</li></ul></li><li>集成 Prettier 和 ES Lint;</li></ul>',4)),t(o),t(l)])}const _=a(d,[["render",p]]);export{f as __pageData,_ as default};
